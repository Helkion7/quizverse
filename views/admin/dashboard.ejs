<%- include('../partials/header') %>

<div>
  <h1>Admin Dashboard</h1>

  <div>
    <div>
      <h5>User Management</h5>
      <div>
        <input type="text" placeholder="Search users..." id="searchInput" />
        <div>
          <button type="button" id="searchButton">
            <i>Search</i>
          </button>
        </div>
      </div>
    </div>

    <div>
      <div>
        <table>
          <thead>
            <tr>
              <th>Username</th>
              <th>Email</th>
              <th>Role</th>
              <th>Created</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="usersTableBody">
            <!-- User data will be loaded here -->
          </tbody>
        </table>
      </div>

      <div id="loadingIndicator">
        <div role="status">
          <span>Loading...</span>
        </div>
      </div>

      <div id="noResults">No users found matching your search.</div>

      <ul id="pagination">
        <!-- Pagination will be generated here -->
      </ul>
    </div>
  </div>
</div>

<div
  id="deleteModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="deleteModalLabel"
  aria-hidden="true"
>
  <div role="document">
    <div>
      <div>
        <h5 id="deleteModalLabel">Confirm Deletion</h5>
        <button type="button" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div>
        Are you sure you want to delete the user
        <span id="deleteUserName"></span>? This action cannot be undone.
      </div>
      <div>
        <button type="button" data-dismiss="modal">Cancel</button>
        <button type="button" id="confirmDelete">Delete</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let currentPage = 1;
    let searchTerm = "";
    const limit = 10;
    let userToDelete = null;

    // Initial load
    loadUsers();

    // Search functionality
    document
      .getElementById("searchButton")
      .addEventListener("click", function () {
        searchTerm = document.getElementById("searchInput").value.trim();
        currentPage = 1;
        loadUsers();
      });

    document
      .getElementById("searchInput")
      .addEventListener("keypress", function (e) {
        if (e.key === "Enter") {
          searchTerm = document.getElementById("searchInput").value.trim();
          currentPage = 1;
          loadUsers();
        }
      });

    // Delete user functionality
    document
      .getElementById("confirmDelete")
      .addEventListener("click", function () {
        if (userToDelete) {
          deleteUser(userToDelete);
        }
      });

    // Function to load users
    function loadUsers() {
      showLoading(true);

      fetch(
        `/admin/users?page=${currentPage}&limit=${limit}&search=${searchTerm}`
      )
        .then((response) => response.json())
        .then((data) => {
          renderUsers(data.users);
          renderPagination(data.pagination);
          showLoading(false);
        })
        .catch((error) => {
          console.error("Error loading users:", error);
          showLoading(false);
          showError("Failed to load users. Please try again.");
        });
    }

    // Function to render users in the table
    function renderUsers(users) {
      const tableBody = document.getElementById("usersTableBody");
      tableBody.innerHTML = "";

      if (users.length === 0) {
        document.getElementById("noResults").classList.remove("d-none");
        return;
      }

      document.getElementById("noResults").classList.add("d-none");

      users.forEach((user) => {
        const row = document.createElement("tr");

        // Format date
        const createdDate = new Date(user.createdAt);
        const formattedDate = createdDate.toLocaleDateString();

        row.innerHTML = `
          <td>${user.username}</td>
          <td>${user.email}</td>
          <td>${user.role}</td>
          <td>${formattedDate}</td>
          <td>
            <button class="delete-btn" data-id="${user._id}" data-username="${user.username}">
              <i class="fa fa-trash"></i> Delete
            </button>
          </td>
        `;

        tableBody.appendChild(row);
      });

      // Add event listeners to delete buttons
      document.querySelectorAll(".delete-btn").forEach((button) => {
        button.addEventListener("click", function () {
          const userId = this.getAttribute("data-id");
          const username = this.getAttribute("data-username");

          userToDelete = userId;
          document.getElementById("deleteUserName").textContent = username;
          $("#deleteModal").modal("show");
        });
      });
    }

    // Function to render pagination
    function renderPagination(pagination) {
      const paginationElement = document.getElementById("pagination");
      paginationElement.innerHTML = "";

      // Previous button
      const prevLi = document.createElement("li");
      prevLi.innerHTML = `<a href="#" data-page="${
        pagination.currentPage - 1
      }">Previous</a>`;
      paginationElement.appendChild(prevLi);

      // Page numbers
      const totalVisiblePages = 5;
      let startPage = Math.max(
        1,
        pagination.currentPage - Math.floor(totalVisiblePages / 2)
      );
      let endPage = Math.min(
        pagination.totalPages,
        startPage + totalVisiblePages - 1
      );

      if (endPage - startPage < totalVisiblePages - 1) {
        startPage = Math.max(1, endPage - totalVisiblePages + 1);
      }

      for (let i = startPage; i <= endPage; i++) {
        const pageLi = document.createElement("li");
        pageLi.innerHTML = `<a href="#" data-page="${i}">${i}</a>`;
        paginationElement.appendChild(pageLi);
      }

      // Next button
      const nextLi = document.createElement("li");
      nextLi.innerHTML = `<a href="#" data-page="${
        pagination.currentPage + 1
      }">Next</a>`;
      paginationElement.appendChild(nextLi);

      // Add event listeners to pagination links
      document.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", function (e) {
          e.preventDefault();
          currentPage = parseInt(this.getAttribute("data-page"));
          loadUsers();
        });
      });
    }

    // Function to delete a user
    function deleteUser(userId) {
      fetch(`/admin/users/${userId}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            $("#deleteModal").modal("hide");
            loadUsers(); // Reload the user list
            showAlert("success", "User deleted successfully");
          } else {
            throw new Error(data.error || "Failed to delete user");
          }
        })
        .catch((error) => {
          console.error("Error deleting user:", error);
          $("#deleteModal").modal("hide");
          showAlert(
            "danger",
            error.message || "An error occurred while deleting the user"
          );
        });
    }

    // Helper functions
    function showLoading(show) {
      const loadingIndicator = document.getElementById("loadingIndicator");
      if (show) {
        loadingIndicator.classList.remove("d-none");
      } else {
        loadingIndicator.classList.add("d-none");
      }
    }

    function showAlert(type, message) {
      const alertDiv = document.createElement("div");
      alertDiv.innerHTML = `
        ${message}
        <button type="button" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      `;

      const container = document.querySelector(".container");
      container.insertBefore(alertDiv, container.firstChild);

      // Auto-dismiss after 5 seconds
      setTimeout(() => {
        alertDiv.remove();
      }, 5000);
    }

    function showError(message) {
      showAlert("danger", message);
    }
  });
</script>

<%- include('../partials/footer') %>
